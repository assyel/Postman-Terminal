{
	"info": {
		"_postman_id": "47aac03b-2427-476a-86e0-0868a6511c03",
		"name": "Ayko",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"Ayko\", jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "ayko",
							"type": "text"
						},
						{
							"key": "password",
							"value": "456",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/login",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"test your age\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.age).to.eql(33);",
							"});",
							"",
							"",
							"let salary_body = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"slry\", salary_body.salary[2]);",
							"",
							"console.log(salary_body.salary[2])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "ayko",
							"type": "text"
						},
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "90000",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{Ayko}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"let jsonData = pm.response.json();",
							"let qa_salary_after_6_months = request.data.salary * 2;",
							"let qa_salary_after_12_months = request.data.salary * 2.9;",
							"pm.test(\"Check salary\", function(){",
							"    pm.expect(parseFloat(jsonData.salary_qa_salary_after_6_months)).to.eql(qa_salary_after_6_months);",
							"    pm.expect(parseFloat(jsonData.salary_qa_salary_after_12_months)).to.eql(qa_salary_after_12_months);",
							"});",
							"",
							"",
							"pm.test(\"hugou\", function () {",
							"    salary = pm.response.json().start_qa_salary;",
							"    pm.expect(salary * 4).to.eql(pm.response.json().person.u_salary_1_5_year)",
							"});",
							"",
							"",
							"",
							"pm.test(\"hugou\", function () {",
							"let salary = JSON.parse(request.data);",
							"    //pm.expect(salary * 4).to.eql(pm.response.json().person.u_salary_1_5_year);",
							"console.log(\"test ===\" + salary.age);",
							"});",
							"",
							"",
							"{let salary = JSON.parse(request.data);",
							"let sal = pm.response.json();",
							"",
							"console.log(sal);",
							"};",
							"",
							"",
							"pm.test(\"hugou\", function () {",
							"let salary = JSON.parse(request.data);",
							"    //pm.expect(salary * 4).to.eql(pm.response.json().person.u_salary_1_5_year);",
							"console.log(\"test ===\" + salary.name);",
							"});",
							"",
							"pm.test(\"hugou\", function () {",
							"let salary = JSON.parse(request.data);",
							"    //pm.expect(salary * 4).to.eql(pm.response.json().person.u_salary_1_5_year);",
							"console.log(\"test ===\" + salary.salary);",
							"});",
							"",
							"",
							"var schema =",
							"",
							"{",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The root schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"examples\": [",
							"        {",
							"            \"person\": {",
							"                \"u_age\": 30,",
							"                \"u_name\": [",
							"                    \"Ayko\",",
							"                    20000,",
							"                    30",
							"                ],",
							"                \"u_salary_1_5_year\": 80000",
							"            },",
							"            \"qa_salary_after_12_months\": 58000.0,",
							"            \"qa_salary_after_6_months\": 40000,",
							"            \"start_qa_salary\": 20000",
							"        }",
							"    ],",
							"    \"required\": [",
							"        \"person\",",
							"        \"qa_salary_after_12_months\",",
							"        \"qa_salary_after_6_months\",",
							"        \"start_qa_salary\"",
							"    ],",
							"    \"properties\": {",
							"        \"person\": {",
							"            \"$id\": \"#/properties/person\",",
							"            \"type\": \"object\",",
							"            \"title\": \"The person schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": {},",
							"            \"examples\": [",
							"                {",
							"                    \"u_age\": 30,",
							"                    \"u_name\": [",
							"                        \"Ayko\",",
							"                        20000,",
							"                        30",
							"                    ],",
							"                    \"u_salary_1_5_year\": 80000",
							"                }",
							"            ],",
							"            \"required\": [",
							"                \"u_age\",",
							"                \"u_name\",",
							"                \"u_salary_1_5_year\"",
							"            ],",
							"            \"properties\": {",
							"                \"u_age\": {",
							"                    \"$id\": \"#/properties/person/properties/u_age\",",
							"                    \"type\": \"integer\",",
							"                    \"title\": \"The u_age schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": 0,",
							"                    \"examples\": [",
							"                        30",
							"                    ]",
							"                },",
							"                \"u_name\": {",
							"                    \"$id\": \"#/properties/person/properties/u_name\",",
							"                    \"type\": \"array\",",
							"                    \"title\": \"The u_name schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": [],",
							"                    \"examples\": [",
							"                        [",
							"                            \"Ayko\",",
							"                            20000",
							"                        ]",
							"                    ],",
							"                    \"additionalItems\": true,",
							"                    \"items\": {",
							"                        \"$id\": \"#/properties/person/properties/u_name/items\",",
							"                        \"anyOf\": [",
							"                            {",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/0\",",
							"                                \"type\": \"string\",",
							"                                \"title\": \"The first anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": \"\",",
							"                                \"examples\": [",
							"                                    \"Ayko\"",
							"                                ]",
							"                            },",
							"                            {",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/1\",",
							"                                \"type\": \"integer\",",
							"                                \"title\": \"The second anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": 0,",
							"                                \"examples\": [",
							"                                    20000,",
							"                                    30",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                },",
							"                \"u_salary_1_5_year\": {",
							"                    \"$id\": \"#/properties/person/properties/u_salary_1_5_year\",",
							"                    \"type\": \"integer\",",
							"                    \"title\": \"The u_salary_1_5_year schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": 0,",
							"                    \"examples\": [",
							"                        80000",
							"                    ]",
							"                }",
							"            },",
							"            \"additionalProperties\": true",
							"        },",
							"        \"qa_salary_after_12_months\": {",
							"            \"$id\": \"#/properties/qa_salary_after_12_months\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The qa_salary_after_12_months schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                58000.0",
							"            ]",
							"        },",
							"        \"qa_salary_after_6_months\": {",
							"            \"$id\": \"#/properties/qa_salary_after_6_months\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The qa_salary_after_6_months schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                40000",
							"            ]",
							"        },",
							"        \"start_qa_salary\": {",
							"            \"$id\": \"#/properties/start_qa_salary\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The start_qa_salary schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                20000",
							"            ]",
							"        }",
							"    },",
							"    \"additionalProperties\": true ",
							"}",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"age\": 30,\n    \"salary\": 20000,\n    \"name\": \"Ayko\",\n    \"auth_token\": \"{{Ayko}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info2-2",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "64",
							"type": "text"
						},
						{
							"key": "name",
							"value": "ayko",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_1",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_1"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();",
							"let weight_d_food = request.data.weight * 0.012;",
							"let weight_d_sleep = request.data.weight * 2.5;",
							"pm.test(\"Check weight\", function(){",
							"    pm.expect(parseFloat(jsonData.daily_food)).to.eql(weight_d_food);",
							"    pm.expect(parseFloat(jsonData.daily_sleep)).to.eql(weight_d_sleep);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "60",
							"type": "text"
						},
						{
							"key": "name",
							"value": "ayko",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{Ayko}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		}
	]
}